"use strict";
/// <reference path="./custom.d.ts" />
// tslint:disable
/**
 * Hello-OAS API
 * This is a simple hello-oas API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: feuyeux@gmail.com
 *
 * NOTE: This file is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the file manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.DefaultApi = exports.DefaultApiFactory = exports.DefaultApiFp = exports.DefaultApiFetchParamCreator = exports.What = exports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = void 0;
var url = require("url");
var isomorphicFetch = require("isomorphic-fetch");
var BASE_PATH = "/".replace(/\/+$/, "");
/**
 *
 * @export
 */
exports.COLLECTION_FORMATS = {
    csv: ",",
    ssv: " ",
    tsv: "\t",
    pipes: "|"
};
/**
 *
 * @export
 * @class BaseAPI
 */
var BaseAPI = /** @class */ (function () {
    function BaseAPI(configuration, basePath, fetch) {
        if (basePath === void 0) { basePath = BASE_PATH; }
        if (fetch === void 0) { fetch = isomorphicFetch; }
        this.basePath = basePath;
        this.fetch = fetch;
        if (configuration) {
            this.configuration = configuration;
            this.basePath = configuration.basePath || this.basePath;
        }
    }
    return BaseAPI;
}());
exports.BaseAPI = BaseAPI;
;
/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
var RequiredError = /** @class */ (function (_super) {
    __extends(RequiredError, _super);
    function RequiredError(field, msg) {
        var _this = _super.call(this, msg) || this;
        _this.field = field;
        return _this;
    }
    return RequiredError;
}(Error));
exports.RequiredError = RequiredError;
/**
 *
 * @export
 * @enum {string}
 */
var What;
(function (What) {
    What[What["Hello"] = 'hello'] = "Hello";
    What[What["Bye"] = 'bye'] = "Bye";
})(What = exports.What || (exports.What = {}));
/**
 * DefaultApi - fetch parameter creator
 * @export
 */
var DefaultApiFetchParamCreator = function (configuration) {
    return {
        /**
         *
         * @param {number} id greeting identification
         * @param {What} what greeting type
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sayGreetings: function (id, what, options) {
            if (options === void 0) { options = {}; }
            // verify required parameter 'id' is not null or undefined
            if (id === null || id === undefined) {
                throw new RequiredError('id', 'Required parameter id was null or undefined when calling sayGreetings.');
            }
            // verify required parameter 'what' is not null or undefined
            if (what === null || what === undefined) {
                throw new RequiredError('what', 'Required parameter what was null or undefined when calling sayGreetings.');
            }
            var localVarPath = "/greetings/{id}"
                .replace("{" + "id" + "}", encodeURIComponent(String(id)));
            var localVarUrlObj = url.parse(localVarPath, true);
            var localVarRequestOptions = Object.assign({ method: 'GET' }, options);
            var localVarHeaderParameter = {};
            var localVarQueryParameter = {};
            if (what !== undefined) {
                localVarQueryParameter['what'] = what;
            }
            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);
            return {
                url: url.format(localVarUrlObj),
                options: localVarRequestOptions
            };
        }
    };
};
exports.DefaultApiFetchParamCreator = DefaultApiFetchParamCreator;
/**
 * DefaultApi - functional programming interface
 * @export
 */
var DefaultApiFp = function (configuration) {
    return {
        /**
         *
         * @param {number} id greeting identification
         * @param {What} what greeting type
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sayGreetings: function (id, what, options) {
            var localVarFetchArgs = (0, exports.DefaultApiFetchParamCreator)(configuration).sayGreetings(id, what, options);
            return function (fetch, basePath) {
                if (fetch === void 0) { fetch = isomorphicFetch; }
                if (basePath === void 0) { basePath = BASE_PATH; }
                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then(function (response) {
                    if (response.status >= 200 && response.status < 300) {
                        return response.json();
                    }
                    else {
                        throw response;
                    }
                });
            };
        }
    };
};
exports.DefaultApiFp = DefaultApiFp;
/**
 * DefaultApi - factory interface
 * @export
 */
var DefaultApiFactory = function (configuration, fetch, basePath) {
    return {
        /**
         *
         * @param {number} id greeting identification
         * @param {What} what greeting type
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sayGreetings: function (id, what, options) {
            return (0, exports.DefaultApiFp)(configuration).sayGreetings(id, what, options)(fetch, basePath);
        }
    };
};
exports.DefaultApiFactory = DefaultApiFactory;
/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
var DefaultApi = /** @class */ (function (_super) {
    __extends(DefaultApi, _super);
    function DefaultApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     *
     * @param {number} id greeting identification
     * @param {What} what greeting type
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    DefaultApi.prototype.sayGreetings = function (id, what, options) {
        return (0, exports.DefaultApiFp)(this.configuration).sayGreetings(id, what, options)(this.fetch, this.basePath);
    };
    return DefaultApi;
}(BaseAPI));
exports.DefaultApi = DefaultApi;
